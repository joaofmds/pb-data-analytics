Programação funcional: O que é?

- Processo de construir software através de composição de funções puras, evitando compartilhamento de estados, dados mutáveis e efeitos colaterais
	- Declarativa

- De onde veio a ideia de programação funcional ?
	- Matemáticos teóricos que lidam com grandes abstrações
	- Manter sistemas complexos organizados
	- O paradigma funcional foi inspirado nesse modelo de trabalho onde as funções são utilizadas para lidar com abstrações e aplicou no desenvolvimento de sistemas

- Composição de função
	- Composição de funções é criar uma nova função através da composição de outras

- Funções Puras
	- Uma função é chamada pura quando invocada mais de uma vez produz exatamente o mesmo resultado
		- Ela não pode depender de valores mutáveis
		- Ela não pode causa efeitos colaterais externos

- Imutabilidade
	- Uma vez que uma variável que recebeu um valor, vai possuir esse valor para sempre, ou quando criamos um objeto ele não pode ser modificado.

- Efeito Colateral
	- Efeito colateral é toda interação da nossa função com o mundo externo
	- A programação funcional não elimina efeitos colaterais totalmente

- Imperativo x Declarativo
	- Na programação funcional tentamos programar de forma declarativa, onde declaramos o que desejamos, sem explicitar como será feito. Qual o usuário 15? Quais os erros dessas informações?

- Estado Compartilhado
	- Estado compartilhado é qualquer valor que está acessível por mais de um ponto de uma aplicação